name: CI/CD for Docker Image Deployment

on:
  push:
    branches:
      - test # Desencadenar en la rama de test para construir y subir la imagen

  pull_request:
    branches:
      - main # Desplegar cuando se haga un PR hacia main

jobs:
  # Trabajo 1: Construir y subir la imagen Docker (en entorno test)
  update_docker_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .               # Usa el Dockerfile desde la raíz
          push: true               # Sube la imagen a Docker Hub
          tags: dayanara1898/html-project:latest

  # Trabajo 2: Desplegar la imagen en EC2 instancia de test
  deploy_to_test:
    name: Deploy Docker Image to Test EC2 Instance
    runs-on: ubuntu-latest
    needs: update_docker_image # Depende de que el trabajo anterior termine con éxito
    if: github.ref == 'refs/heads/test' # Solo se ejecuta en un push a la rama test

    steps:
      - name: Set up SSH key for Test Instance
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY_TEST }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to EC2 Test Instance
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_INSTANCE_TEST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY_TEST }}
          port: 22
          script: |
            docker stop html-container || true
            docker rm html-container || true
            docker pull dayanara1898/html-project:latest
            docker run -d --name html-container -p 80:80 dayanara1898/html-project:latest

  # Trabajo 3: Desplegar la imagen en EC2 instancias de producción
  deploy_to_production:
    name: Deploy Docker Image to EC2 Instances
    runs-on: ubuntu-latest
    needs: update_docker_image
    if: github.event_name == 'pull_request' # Solo se ejecuta en un PR hacia 'main'

    steps:
      - name: Set up SSH key for Production Instances
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Paso 1: Desplegar en la instancia EC2 1 (Producción)
      - name: Deploy to EC2 Instance 1 (Production)
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_INSTANCE_1 }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            docker stop html-container || true
            docker rm html-container || true
            docker pull dayanara1898/html-project:latest
            docker run -d --name html-container -p 80:80 dayanara1898/html-project:latest

      # Paso 2: Desplegar en la instancia EC2 2 (Producción)
      - name: Deploy to EC2 Instance 2 (Production)
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_INSTANCE_2 }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            docker stop html-container || true
            docker rm html-container || true
            docker pull dayanara1898/html-project:latest
            docker run -d --name html-container -p 80:80 dayanara1898/html-project:latest

